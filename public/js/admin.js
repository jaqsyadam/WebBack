document.addEventListener("DOMContentLoaded", () => {
  document.getElementById("logoutBtn")?.addEventListener("click", () => {
    localStorage.removeItem("token");
    localStorage.setItem("toastMessage", JSON.stringify({ message: "–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞", type: "success" }));
    window.location.href = "/index.html";
  });
});

document.addEventListener("DOMContentLoaded", async () => {
  const token = localStorage.getItem("token");

  if (!token) {
    return (window.location.href = "/404.html");
  }

  try {
    const response = await fetch("/api/auth/profile", {
      headers: { Authorization: `Bearer ${token}` },
    });

    const user = await response.json();

    if (!response.ok || user.role !== "admin") {
      return (window.location.href = "/404.html");
    }

    // –ï—Å–ª–∏ –∞–¥–º–∏–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    loadAdminContent();
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏:", error);
    window.location.href = "/404.html";
  }
});


// üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async function loadUsers() {
  const adminContent = document.getElementById("adminContent");
  adminContent.innerHTML = "<h2>–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</h2>";

  try {
    const response = await fetch("/api/admin/users", {
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
    });
    const users = await response.json();

    if (!response.ok) throw new Error(users.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π");

    adminContent.innerHTML = `
      <h2>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
      <ul class="list-group">
        ${users.map(user => `
          <li class="list-group-item">
            <div class="d-flex flex-column gap-2">
              ${createEditableField(user._id, "name", user.name)}
              ${createEditableField(user._id, "email", user.email)}
              ${createEditableField(user._id, "phone", user.phone || "–ù–µ —É–∫–∞–∑–∞–Ω")}
              ${createEditableField(user._id, "role", user.role)}
              <button class="btn btn-sm btn-danger mt-2" onclick="deleteUser('${user._id}')">–£–¥–∞–ª–∏—Ç—å</button>
            </div>
          </li>`).join("")}
      </ul>`;
  } catch (error) {
    showToast(error.message, "danger");
  }
}

// üîπ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞
function createEditableField(userId, field, value) {
  return `
    <div class="d-flex align-items-center">
      <strong class="me-2">${field.charAt(0).toUpperCase() + field.slice(1)}:</strong>
      <input type="text" class="form-control form-control-sm me-2" id="input-${field}-${userId}" value="${value}" disabled>
      <button class="btn btn-sm btn-info" id="edit-${field}-${userId}" onclick="toggleEdit('${userId}', '${field}')">–ò–∑–º–µ–Ω–∏—Ç—å</button>
      <button class="btn btn-sm btn-success d-none" id="save-${field}-${userId}" onclick="updateUserField('${userId}', '${field}')">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
    </div>
  `;
}

// üîπ –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Å–∫—Ä—ã–≤–∞–µ—Ç "–ò–∑–º–µ–Ω–∏—Ç—å", –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
function toggleEdit(userId, field) {
  const input = document.getElementById(`input-${field}-${userId}`);
  const editBtn = document.getElementById(`edit-${field}-${userId}`);
  const saveBtn = document.getElementById(`save-${field}-${userId}`);

  input.disabled = false; // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
  editBtn.classList.add("d-none"); // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å"
  saveBtn.classList.remove("d-none"); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
}

// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function updateUserField(userId, field) {
  const input = document.getElementById(`input-${field}-${userId}`);
  const newValue = input.value.trim();
  const editBtn = document.getElementById(`edit-${field}-${userId}`);
  const saveBtn = document.getElementById(`save-${field}-${userId}`);

  if (!newValue) {
    showToast("–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º", "danger");
    return;
  }

  try {
    const response = await fetch(`/api/admin/users/${userId}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${localStorage.getItem("token")}`,
      },
      body: JSON.stringify({ field, value: newValue }),
    });

    const data = await response.json();
    if (response.ok) {
      showToast(`–ü–æ–ª–µ ${field} –æ–±–Ω–æ–≤–ª–µ–Ω–æ`, "success", true);
      input.disabled = true; // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª–µ –æ–±—Ä–∞—Ç–Ω–æ
      saveBtn.classList.add("d-none"); // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
      editBtn.classList.remove("d-none"); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å"
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "danger");
    }
  } catch (error) {
    showToast("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", "danger");
  }
}

// üîπ –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function deleteUser(userId) {

  try {
    const response = await fetch(`/api/admin/users/${userId}`, {
      method: "DELETE",
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
    });

    const data = await response.json();
    if (response.ok) {
      showToast("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω", "success", true);
      loadUsers();
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "danger");
    }
  } catch (error) {
    showToast("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è", "danger");
  }
}



// üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
// üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π
async function loadBookings() {
  const adminContent = document.getElementById("adminContent");
  adminContent.innerHTML = "<h2>–ó–∞–≥—Ä—É–∑–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π...</h2>";

  try {
    const response = await fetch("/api/admin/bookings", {
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
    });

    const bookings = await response.json();
    if (!response.ok) throw new Error(bookings.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–π");

    adminContent.innerHTML = `
      <h2>–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è</h2>
      <ul class="list-group">
        ${bookings.map(booking => `
          <li class="list-group-item">
            <div class="d-flex flex-column gap-2">
              ${createEditableField(booking._id, "startTime", new Date(booking.startTime).toLocaleDateString())}
              ${createEditableField(booking._id, "endTime", new Date(booking.endTime).toLocaleDateString())}
              ${createEditableField(booking._id, "status", booking.status)}
              ${createEditableField(booking._id, "totalPrice", booking.totalPrice || "–ù–µ —É–∫–∞–∑–∞–Ω–∞")}
              <button class="btn btn-sm btn-danger mt-2" onclick="deleteBooking('${booking._id}')">–£–¥–∞–ª–∏—Ç—å</button>
            </div>
          </li>`).join("")}
      </ul>`;
  } catch (error) {
    showToast(error.message, "danger");
  }
}

// üîπ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞
function createEditableField(bookingId, field, value) {
  return `
    <div class="d-flex align-items-center">
      <strong class="me-2">${field.charAt(0).toUpperCase() + field.slice(1)}:</strong>
      <input type="text" class="form-control form-control-sm me-2" id="input-${field}-${bookingId}" value="${value}" disabled>
      <button class="btn btn-sm btn-info" id="edit-${field}-${bookingId}" onclick="toggleEdit('${bookingId}', '${field}')">–ò–∑–º–µ–Ω–∏—Ç—å</button>
      <button class="btn btn-sm btn-success d-none" id="save-${field}-${bookingId}" onclick="updateBookingField('${bookingId}', '${field}')">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
    </div>
  `;
}

// üîπ –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (—Å–∫—Ä—ã–≤–∞–µ—Ç "–ò–∑–º–µ–Ω–∏—Ç—å", –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
function toggleEdit(bookingId, field) {
  const input = document.getElementById(`input-${field}-${bookingId}`);
  const editBtn = document.getElementById(`edit-${field}-${bookingId}`);
  const saveBtn = document.getElementById(`save-${field}-${bookingId}`);

  input.disabled = false; // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
  editBtn.classList.add("d-none"); // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å"
  saveBtn.classList.remove("d-none"); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
}

// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
async function updateBookingField(bookingId, field) {
  const input = document.getElementById(`input-${field}-${bookingId}`);
  const newValue = input.value.trim();
  const editBtn = document.getElementById(`edit-${field}-${bookingId}`);
  const saveBtn = document.getElementById(`save-${field}-${bookingId}`);

  if (!newValue) {
    showToast("–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º", "danger");
    return;
  }

  try {
    const response = await fetch(`/api/admin/bookings/${bookingId}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${localStorage.getItem("token")}`,
      },
      body: JSON.stringify({ field, value: newValue }),
    });

    const data = await response.json();
    if (response.ok) {
      showToast(`–ü–æ–ª–µ ${field} –æ–±–Ω–æ–≤–ª–µ–Ω–æ`, "success", true);
      input.disabled = true; // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø–æ–ª–µ –æ–±—Ä–∞—Ç–Ω–æ
      saveBtn.classList.add("d-none"); // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"
      editBtn.classList.remove("d-none"); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ò–∑–º–µ–Ω–∏—Ç—å"
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è", "danger");
    }
  } catch (error) {
    showToast("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", "danger");
  }
}

// üîπ –£–¥–∞–ª–µ–Ω–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
async function deleteBooking(bookingId) {

  try {
    const response = await fetch(`/api/admin/bookings/${bookingId}`, {
      method: "DELETE",
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
    });

    const data = await response.json();
    if (response.ok) {
      showToast("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ", "success", true);
      loadBookings();
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è", "danger");
    }
  } catch (error) {
    showToast("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è", "danger");
  }
}


// üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—à–∏–Ω
async function loadCars() {
  const adminContent = document.getElementById("adminContent");
  adminContent.innerHTML = `
    <h2>–°–ø–∏—Å–æ–∫ –º–∞—à–∏–Ω</h2>
    <button class="btn btn-primary mb-3" id="addCarBtn">–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –º–∞—à–∏–Ω—É</button>
    <div id="addCarFormContainer" class="d-none"></div> <!-- –§–æ—Ä–º–∞ —Å–∫—Ä—ã—Ç–∞ -->
    <div id="carsContainer"></div>
  `;

  document.getElementById("addCarBtn").addEventListener("click", showAddCarForm);
  fetchCars();
}

// üîπ –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—à–∏–Ω—ã
function showAddCarForm() {
  const formContainer = document.getElementById("addCarFormContainer");
  formContainer.innerHTML = `
    <div class="card p-3">
      <h3>–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã</h3>
      <form id="addCarForm" enctype="multipart/form-data">
        <input type="text" id="carBrand" class="form-control mb-2" placeholder="–ú–∞—Ä–∫–∞" required>
        <input type="text" id="carModel" class="form-control mb-2" placeholder="–ú–æ–¥–µ–ª—å" required>
        <input type="number" id="carYear" class="form-control mb-2" placeholder="–ì–æ–¥" required>
        <input type="number" id="carPrice" class="form-control mb-2" placeholder="–¶–µ–Ω–∞ –∑–∞ –¥–µ–Ω—å" required>
        <input type="number" id="carQuantity" class="form-control mb-2" placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ" required>
        <input type="file" id="carImage" class="form-control mb-2" accept="image/*" required>
        <button type="submit" class="btn btn-success">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        <button type="button" class="btn btn-danger" onclick="hideAddCarForm()">–û—Ç–º–µ–Ω–∞</button>
      </form>
    </div>
  `;
  formContainer.classList.remove("d-none");

  document.getElementById("addCarForm").addEventListener("submit", addCar);
}

// üîπ –°–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–∞—à–∏–Ω—ã
function hideAddCarForm() {
  document.getElementById("addCarFormContainer").classList.add("d-none");
}

// üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –º–∞—à–∏–Ω—ã
async function addCar(event) {
  event.preventDefault();

  const formData = new FormData();
  formData.append("brand", document.getElementById("carBrand").value);
  formData.append("model", document.getElementById("carModel").value);
  formData.append("year", document.getElementById("carYear").value);
  formData.append("pricePerDay", document.getElementById("carPrice").value);
  formData.append("quantity", document.getElementById("carQuantity").value);
  formData.append("img", document.getElementById("carImage").files[0]);

  try {
    // üõ†Ô∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç `/api/admin/cars/add`
    const response = await fetch("/api/admin/cars/add", {
      method: "POST",
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
      body: formData,
    });

    const data = await response.json();
    if (response.ok) {
      showToast("–ú–∞—à–∏–Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞", "success", true);
      hideAddCarForm();
      fetchCars();
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—à–∏–Ω—ã", "danger");
    }
  } catch (error) {
    showToast("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", "danger");
  }
}

// üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—à–∏–Ω –≤ —Å–ø–∏—Å–æ–∫
// üîπ –ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞ –º–∞—à–∏–Ω
async function fetchCars() {
  const carsContainer = document.getElementById("carsContainer");
  carsContainer.innerHTML = "<h4>–ó–∞–≥—Ä—É–∑–∫–∞...</h4>";

  try {
    const response = await fetch("/api/admin/cars", {
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
    });

    const cars = await response.json();
    if (!response.ok) throw new Error(cars.message || "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—à–∏–Ω");

    carsContainer.innerHTML = `
      <ul class="list-group">
        ${cars.map(car => `
          <li class="list-group-item">
            <div class="d-flex flex-column gap-2">
              <img src="${car.img ? car.img : "/default-car.jpg"}" alt="Car Image" style="width: 150px;">
              ${createEditableField(car._id, "brand", car.brand)}
              ${createEditableField(car._id, "model", car.model)}
              ${createEditableField(car._id, "year", car.year)}
              ${createEditableField(car._id, "pricePerDay", car.pricePerDay)}
              ${createEditableField(car._id, "quantity", car.quantity)}
              
              <input type="file" id="carImage-${car._id}" class="form-control form-control-sm mb-2">
              <button class="btn btn-sm btn-warning" onclick="updateCarImage('${car._id}')">–û–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ</button>
              <button class="btn btn-sm btn-danger" onclick="deleteCar('${car._id}')">–£–¥–∞–ª–∏—Ç—å</button>
            </div>
          </li>`).join("")}
      </ul>`;
  } catch (error) {
    showToast(error.message, "danger");
  }
}

// üîπ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞—Ç—Ä–∏–±—É—Ç–∞ –º–∞—à–∏–Ω—ã
function createEditableField(carId, field, value) {
  return `
    <div class="d-flex align-items-center">
      <strong class="me-2">${field.charAt(0).toUpperCase() + field.slice(1)}:</strong>
      <input type="text" class="form-control form-control-sm me-2" id="input-${field}-${carId}" value="${value}" disabled>
      <button class="btn btn-sm btn-info" id="edit-${field}-${carId}" onclick="toggleEdit('${carId}', '${field}')">–ò–∑–º–µ–Ω–∏—Ç—å</button>
      <button class="btn btn-sm btn-success d-none" id="save-${field}-${carId}" onclick="updateCarField('${carId}', '${field}')">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
    </div>
  `;
}

// üîπ –í–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function toggleEdit(carId, field) {
  const input = document.getElementById(`input-${field}-${carId}`);
  const editBtn = document.getElementById(`edit-${field}-${carId}`);
  const saveBtn = document.getElementById(`save-${field}-${carId}`);

  input.disabled = false;
  editBtn.classList.add("d-none");
  saveBtn.classList.remove("d-none");
}

// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞—Ç—Ä–∏–±—É—Ç–∞ –º–∞—à–∏–Ω—ã
async function updateCarField(carId, field) {
  const input = document.getElementById(`input-${field}-${carId}`);
  const newValue = input.value.trim();
  const editBtn = document.getElementById(`edit-${field}-${carId}`);
  const saveBtn = document.getElementById(`save-${field}-${carId}`);

  if (!newValue) {
    showToast("–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º", "danger");
    return;
  }

  try {
    const response = await fetch(`/api/admin/cars/${carId}`, {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${localStorage.getItem("token")}`,
      },
      body: JSON.stringify({ field, value: newValue }),
    });

    const data = await response.json();
    if (response.ok) {
      showToast(`–ü–æ–ª–µ ${field} –æ–±–Ω–æ–≤–ª–µ–Ω–æ`, "success", true);
      input.disabled = true;
      saveBtn.classList.add("d-none");
      editBtn.classList.remove("d-none");
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è", "danger");
    }
  } catch (error) {
    showToast("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è", "danger");
  }
}


// üîπ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è
async function updateCarImage(carId) {
  const fileInput = document.getElementById(`carImage-${carId}`);
  if (!fileInput.files.length) {
    showToast("–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", "danger");
    return;
  }

  const formData = new FormData();
  formData.append("img", fileInput.files[0]);

  try {
    const response = await fetch(`/api/admin/cars/${carId}/image`, {
      method: "PUT",
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
      body: formData,
    });

    const data = await response.json();
    if (response.ok) {
      showToast("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ", "success", true);
      fetchCars();
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", "danger");
    }
  } catch (error) {
    showToast("–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞", "danger");
  }
}

// üîπ –£–¥–∞–ª–µ–Ω–∏–µ –º–∞—à–∏–Ω—ã
async function deleteCar(carId) {

  try {
    const response = await fetch(`/api/admin/cars/${carId}`, {
      method: "DELETE",
      headers: { Authorization: `Bearer ${localStorage.getItem("token")}` },
    });

    const data = await response.json();
    if (response.ok) {
      showToast("–ú–∞—à–∏–Ω–∞ —É–¥–∞–ª–µ–Ω–∞", "success", true);
      fetchCars();
    } else {
      showToast(data.message || "–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –º–∞—à–∏–Ω—ã", "danger");
    }
  } catch (error) {
    showToast("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è", "danger");
  }
}
